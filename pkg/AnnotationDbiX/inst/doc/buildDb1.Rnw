%\VignetteIndexEntry{How to build a .db1 database from a .db0 database}
%\VignetteDepends{}
%\VignetteKeywords{annotation, database}
%\VignettePackage{AnnotationDbiX}
\documentclass[11pt]{article}

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Species}[1]{{\textit{#1}}}
\newcommand{\SQLtable}[1]{{\texttt{`#1'}}}
\newcommand{\Rprog}[1]{{\textbf{#1}}}

\title{How to build a .db1 database from a .db0 database}
\author{Norbert Auer}

\SweaveOpts{keep.source=TRUE}

\begin{document}

\maketitle


\section{How to build a \textit{.db1} database from a \textit{.db0} database}
\label{db0todb1}
For using \textit{.db0} databases with the \Rpackage{AnnotationDbiX} package it is essential to do some adjustments. Because all available \textit{.db0} packages are different in their structure it is necessary to declare for each package an own function which convert the \textit{.db0} database to a \textit{.db1} database. These functions should be named as db1ConverterXXX where the XXX stands for the \textit{.db0} package name to keep the survey. No data of the \textit{.db0} database is changed or is deleted. Only new data is added. Thus, the \textit{.db1} database can further be used as \textit{.db0} database. The following new tables must be added to ensure that the \textit{.db1} database works correctly: 

\begin{itemize}
\item A \SQLtable{table\_master\_meta} table. It includes all table names of the \textit{.db0} database which are identifier tables and should be transferred in the \textit{.db1} database. The table has 4 columns. The first column contains the table name of the annotation tables which should be transferred. The second one includes the field names of the tables in the first column. If a table has more than two columns except the internal identifier column then the field names are separated by a semicolon. The third column contains the SQL CREATE statements which are needed to build this table. The forth column contains the URL links where the identifiers of the table are associated to. If a table has more than two columns except the internal identifier column then the links are separated by the "|" character. If there is no link set and if the table has more than one column then the "|" character is set alone for two columns or an additional "|" character for each further column. 

To create the table the \Rfunction{dbWriteTable()} function from the \Rpackage{RSQLite} package can be used.

<<tmm1,keep.source=TRUE,cache=TRUE,results=hide,eval=FALSE>>=
tablenames <- c('gene_info','genes','refseq','ec')

fieldnames <- c('gene_name;symbol','gene_id',
    'accession','ec_number')

createstatements <- c(
    'CREATE TABLE gene_info (_id integer NOT NULL,
    gene_name VARCHAR(255) NOT NULL,
    symbol VARCHAR(80),FOREIGN KEY (_id) 
    REFERENCES internal_id(_id))',
    'CREATE TABLE genes (_id integer NOT NULL,
    gene_id VARCHAR(10) NOT NULL,
    FOREIGN KEY (_id) 
    REFERENCES internal_id(_id))',
    'CREATE TABLE refseq (_id integer NOT NULL,
    accession VARCHAR(20) NOT NULL,FOREIGN KEY 
    (_id) REFERENCES internal_id(_id))',
    'CREATE TABLE ec (_id integer NOT NULL,
    ec_number VARCHAR(13) NOT NULL,
    FOREIGN KEY (_id) 
    REFERENCES internal_id(_id))')

linksURL <- c(
    'http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?
    db=gene&cmd=Retrieve&dopt=Graphics&list_uids=
    $ID','http://www.ncbi.nlm.nih.gov/entrez/
    query.fcgi?db=Nucleotide&cmd=search&term=$ID',
    '','|')
		
tb <- data.frame(tablenames,fieldnames,createstatements,
    linksURL,stringsAsFactors=FALSE)
	
colnames(tb) <- c('tablename','fieldnames',
    'createstatements','links')

dbWriteTable(connType,'table_master_meta',tb,
    row.names = FALSE,overwrite = TRUE,append = FALSE)
@

\item An \SQLtable{internal\_id} table. It includes only the internal identifiers of the \textit{.db0} database. It is a 1:1 copy of the \SQLtable{\_id} column from the \SQLtable{genes} table. The main table of the \textit{.db0} databases is mostly the \SQLtable{genes} table because the annotation packages are all gene centric and therefore, the Entrez Gene identifiers were used to generate the internal identifiers. To copy the internal identifiers the following code snippet can be used.
<<db1_1,keep.source=TRUE,cache=TRUE,results=hide,eval=FALSE>>=
sql <- "CREATE TABLE internal_id (_id INTEGER PRIMARY KEY)"

dbGetQuery(connType,sql)
	
## Writes internal ids into the database
cat("Writes internal ids into the database\n")
sql <- "INSERT INTO internal_id (_id) SELECT _id FROM genes"

dbGetQuery(connType,sql)
@
\item Optionally a \SQLtable{bimap\_meta} table can be created to generate pre-defined Bimap objects for the final \textit{.db} databases. The table can be created with the following example.
<<db1_2,keep.source=TRUE,cache=TRUE,results=hide,eval=FALSE>>=
sql <- "CREATE TABLE IF NOT EXISTS bimap_meta 
    (name VARCHAR(40) PRIMARY KEY,table1 VARCHAR(40) NOT NULL,
    table2 VARCHAR(40) NOT NULL,tagname1 VARCHAR(40),
    tagname2 VARCHAR(40),comment VARCHAR(40),
    filter1 VARCHAR(255),filter2 VARCHAR(255),revmap INTEGER)"
    
dbGetQuery(connType,sql)
@
Bimap objects can be added with the \Rfunction{addBimapObj()} function. If a \SQLtable{bimap\_meta} table is constructed it is automatically copied to the \textit{.db} database during the \Rfunction{makeDbX()} function execution.
\end{itemize}

If there are any database errors in the \textit{.db0} database in this function they could be eliminated. For example in the \Rpackage{ecoliK12.db0} package the \SQLtable{accession} table includes not only GenBank accession numbers but also RefSeq accession numbers. To correct this problem a new table \SQLtable{genbank\_id} was created and all GenBank accession numbers with their internal identifiers were copied in this new table and instead of the \SQLtable{accession} table the \SQLtable{genbank\_id} table was inserted in the \SQLtable{table\_master\_meta} table. The function should return TRUE if it succeeds.

\section{Session Information}

The version number of R and packages loaded for generating the vignette were:

<<SessionInfo, echo=FALSE>>=
sessionInfo()
@
\end{document}

